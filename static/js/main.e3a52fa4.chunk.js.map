{"version":3,"sources":["main/repo/repo.module.css","main/Main.module.css","card/card.module.css","reducers/reposReducer.tsx","app/store.ts","card/card.tsx","main/repo/Repo.tsx","main/Main.tsx","utils/pagesCreator.ts","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SET_REPOS","SET_IS_FETCHING","SET_CURRENT_PAGE","SET_IS_OWNER","SET_STARGAZERS_COUNT","SET_IS_LOGIN","defaultState","items","isFetching","currentPage","perPage","totalCount","stargazersCount","owner","login","setCurrentPage","page","type","payload","getReposThunk","searchValue","dispatch","axios","get","then","res","data","rootReducer","combineReducers","repos","state","action","composeEnhancers","window","compose","store","createStore","applyMiddleware","thunk","Card","props","useSelector","useDispatch","useParams","username","reponame","useEffect","avatar_url","stargazers_count","getCurrentReposThunk","console","log","onClick","history","goBack","className","s","card","src","alt","name","stars","Repo","repo","repo__header","repo__header_name","to","repo__header_stars","stargaszers_count","repo__last_commit","updated_at","href","html_url","repo__link","Main","newPages","pages","pagesCount","newpages","i","push","creatorPages","Math","ceil","useState","seachValue","setSeachValue","search","value","onChange","e","currentTarget","search_btn","map","index","current_page","somePages","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3a52fa4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"repo\":\"repo_repo__1NyxG\",\"repo__header\":\"repo_repo__header__1EkdN\",\"repo__header_name\":\"repo_repo__header_name__21S-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Main_search__I9Q2z\",\"input\":\"Main_input__1Nlog\",\"btn\":\"Main_btn__Mbe04\",\"isFetching\":\"Main_isFetching__3yzlb\",\"search-fetching\":\"Main_search-fetching__2hvck\",\"pages\":\"Main_pages__HwXrE\",\"page\":\"Main_page__1XgIN\",\"current_page\":\"Main_current_page__2gM7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1WTrx\",\"name\":\"card_name__3Ssu3\",\"stars\":\"card_stars__3n1Ko\"};","import axios, { AxiosResponse } from \"axios\"\r\nimport { AppDispatch } from \"../app/store\"\r\nimport { DataType } from \"./defaultStateType\"\r\n\r\nconst SET_REPOS = \"SET_REPOS\"\r\nconst SET_IS_FETCHING = \"SET_IS_FETCHING\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_IS_OWNER = \"SET_IS_OWNER\"\r\nconst SET_STARGAZERS_COUNT = \"SET_STARGAZERS_COUNT\"\r\nconst SET_IS_LOGIN = \"SET_IS_LOGIN\"\r\n\r\n\r\nexport type StateActions =\r\n   | ReturnType<typeof setRepos>\r\n   | ReturnType<typeof setFetching>\r\n   | ReturnType<typeof setCurrentPage>\r\n   | ReturnType<typeof setOwner>\r\n   | ReturnType<typeof setCount>\r\n   | ReturnType<typeof setStargazersCount>\r\n   | ReturnType<typeof setLogin>\r\n\r\nexport type PacksInitialState = {\r\n   items: Array<DataType> | null,\r\n   isFetching: boolean,\r\n   currentPage: number,\r\n   perPage: number,\r\n   totalCount: number,\r\n   stargazersCount: number,\r\n   owner: any | null,\r\n   login: string | null,\r\n}\r\n\r\n\r\nconst defaultState: PacksInitialState = {\r\n   items: null,\r\n   isFetching: true,\r\n   currentPage: 1,\r\n   perPage: 10,\r\n   totalCount: 0,\r\n\r\n   stargazersCount: 0,\r\n   owner: null,\r\n   login: null\r\n\r\n}\r\n\r\nexport default function reposReducer(state = defaultState, action: StateActions): PacksInitialState {\r\n   switch (action.type) {\r\n      case SET_REPOS:\r\n         return {\r\n            ...state,\r\n            items: action.payload,\r\n            isFetching: false,\r\n         }\r\n      case SET_CURRENT_PAGE:\r\n         return {\r\n            ...state,\r\n            currentPage: action.payload,\r\n         }\r\n      case SET_IS_FETCHING:\r\n         return {\r\n            ...state,\r\n            isFetching: action.payload,\r\n         }\r\n      case SET_IS_OWNER:\r\n         return {\r\n            ...state,\r\n            owner: action.payload,\r\n         }\r\n      case SET_STARGAZERS_COUNT:\r\n         return {\r\n            ...state,\r\n            stargazersCount: action.payload,\r\n         }\r\n      case SET_IS_LOGIN:\r\n         return {\r\n            ...state,\r\n            login: action.payload,\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\n\r\n\r\nexport const setStargazersCount = (stargazersCount: number) => ({ type: \"SET_STARGAZERS_COUNT\", payload: stargazersCount } as const)\r\nexport const setCount = (totalCount: number) => ({ type: \"SET_COUNT\", payload: totalCount } as const)\r\nexport const setRepos = (repos: Array<DataType>) => ({ type: \"SET_REPOS\", payload: repos } as const)\r\nexport const setFetching = (bool: boolean) => ({ type: \"SET_IS_FETCHING\", payload: bool } as const)\r\nexport const setCurrentPage = (page: number) => ({ type: \"SET_CURRENT_PAGE\", payload: page } as const)\r\nexport const setOwner = (avatar: any) => ({ type: 'SET_IS_OWNER', payload: avatar } as const)\r\nexport const setLogin = (login: string) => ({ type: 'SET_IS_LOGIN', payload: login } as const)\r\n\r\n\r\nexport const getCurrentReposThunk = (username: string, reponame: string) => (dispatch: AppDispatch) => {\r\n   axios.get<AxiosResponse, any>(`https://api.github.com/repos/${username}/${reponame}`)\r\n      .then((res) => {\r\n         dispatch(setOwner(res.data.owner.avatar_url))\r\n         dispatch(setLogin(res.data.owner.login))\r\n         dispatch(setStargazersCount(res.data.stargazers_count))\r\n      })\r\n}\r\nexport const getReposThunk = (searchValue: string, currentPage: number, perPage: number) => (dispatch: AppDispatch) => {\r\n   if (searchValue === \"\") {\r\n      searchValue = \"stars:%3E1\";\r\n   }\r\n   axios.get<any, AxiosResponse>(`https://api.github.com/search/repositories?q=${searchValue}&sort=stars&per_page=${perPage}&page=${currentPage}`)\r\n      .then((res) => {\r\n\r\n         dispatch(setRepos(res.data.items))\r\n      })\r\n}\r\n\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport reposReducer from '../reducers/reposReducer';\n\n\nexport const rootReducer = combineReducers({\n    repos: reposReducer, \n});\n//@ts-ignore\nconst composeEnhancers = window[\"REDUX_DEVTOOLS_EXTENSION_COMPOSE\"] || compose;\nexport const store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppDispatch = typeof store.dispatch\n\n// @ts-ignore\nwindow.store = store","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, RouteComponentProps } from \"react-router\";\r\nimport { RootState } from \"../app/store\";\r\nimport { getCurrentReposThunk } from \"../reducers/reposReducer\";\r\nimport s from \"./card.module.css\"\r\n\r\nexport type CardsType = {\r\n\r\n}\r\n\r\nconst Card = (props: CardsType & RouteComponentProps) => {\r\n   const stargazersCount = useSelector((state: RootState) => state.repos.stargazersCount)\r\n   const owner = useSelector((state: RootState) => state.repos.owner)\r\n   const login = useSelector((state: RootState) => state.repos.login)\r\n\r\n\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const { username, reponame } = useParams<{ username: string; reponame: string }>()\r\n\r\n\r\n\r\n   useEffect(() => {\r\n\r\n\r\n      dispatch(getCurrentReposThunk(username, reponame));\r\n   }, [])\r\n\r\n   console.log();\r\n\r\n\r\n   return (\r\n      <div>\r\n         <button onClick={() => props.history.goBack()} className=\"cack-btn\">BACK</button> card repo\r\n         <div className={s.card}>\r\n            <img src={owner} alt='' />\r\n            <div className={s.name}>{login}</div>\r\n            <div className={s.stars}>{stargazersCount}</div>\r\n         </div>\r\n\r\n      </div>\r\n   );\r\n}\r\nexport default Card;\r\n\r\n","\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport s from './repo.module.css'\r\nconst Repo = (props: any) => {\r\n\r\n   const repo = props.repo\r\n   return (\r\n      <div className={s.repo}>\r\n         <div className={s.repo__header}>\r\n            <div className={s.repo__header_name}> <NavLink to={`/card/${repo.owner.login}/${repo.name}`}>{repo.name}</NavLink></div>\r\n            <div className={s.repo__header_stars}>Количество звезд: {repo.stargaszers_count}</div>\r\n         </div>\r\n         <div className={s.repo__last_commit}>{repo.updated_at}</div>\r\n         <a href={repo.html_url} className={s.repo__link}> Cылка на репозиторий:{repo.html_url}</a>\r\n      </div>\r\n   );\r\n}\r\nexport default Repo;\r\n\r\n","import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../app/store'\r\nimport Repo from './repo/Repo';\r\nimport s from './Main.module.css'\r\nimport { getReposThunk, setCurrentPage } from '../reducers/reposReducer';\r\nimport { creatorPages } from '../utils/pagesCreator';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const Main: FunctionComponent = () => {\r\n   const dispatch = useDispatch()\r\n   const repos = useSelector((state: RootState) => state.repos.items)\r\n   const isFetching = useSelector((state: RootState) => state.repos.isFetching)\r\n   const currentPage = useSelector((state: RootState) => state.repos.currentPage)\r\n   const totalCount = useSelector((state: RootState) => state.repos.totalCount)\r\n   const perPage = useSelector((state: RootState) => state.repos.perPage)\r\n\r\n   const pagesCount = Math.ceil(totalCount / perPage)\r\n\r\n   const pages: Array<number> = []\r\n\r\n   let newPages = creatorPages(pages, pagesCount, currentPage)\r\n\r\n   const [seachValue, setSeachValue] = useState(\"\")\r\n\r\n   useEffect(() => {\r\n\r\n      dispatch(getReposThunk(seachValue, currentPage, perPage))\r\n   }, [currentPage])\r\n\r\n   const searchHandker = () => {\r\n      dispatch(setCurrentPage(1))\r\n      dispatch(getReposThunk(seachValue, currentPage, perPage))\r\n   }\r\n\r\n\r\n   const somePages = (page: number) => {\r\n      dispatch(setCurrentPage(page))\r\n   }\r\n   console.log(repos);\r\n   return (\r\n      <div>\r\n         <div className={s.search}>\r\n            <div>\r\n               <input value={seachValue} onChange={(e) => setSeachValue(e.currentTarget.value)} type=\"text\" />\r\n            </div>\r\n            <button onClick={searchHandker} className={s.search_btn}>Search</button>\r\n         </div>\r\n         {\r\n            isFetching === false\r\n               ?\r\n               repos && repos.map((repo: any) =>\r\n                  <Repo repo={repo} />)\r\n               :\r\n               <div className={s.isFetching}>\r\n\r\n               </div>\r\n         }\r\n         <div className={s.pages}>\r\n            {newPages.map((page: any, index: any) => <span\r\n               key={index}\r\n               className={currentPage == page ? s.current_page : s.page}\r\n               onClick={() => somePages(page)}\r\n            >{page}</span>)}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","\r\n\r\nexport const creatorPages = (pages: Array<number>, pagesCount: number, currentPage: number) => {\r\n   // debugger\r\n   let newpages: any = []\r\n   if (pagesCount > 10) {\r\n      if (currentPage > 5) {\r\n         for (let i = currentPage - 4; i <= currentPage + 5; i++) {\r\n            newpages.push(i)\r\n            if (i === pagesCount) break\r\n         }\r\n      }\r\n      else {\r\n         for (let i = 1; i <= 10; i++) {\r\n            newpages.push(i)\r\n            if (i === pagesCount) break\r\n         }\r\n      }\r\n   } else {\r\n      for (let i = 1; i <= pagesCount; i++) {\r\n         newpages.push(i)\r\n\r\n      }\r\n   }\r\n\r\n   return newpages;\r\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Card from '../card/card';\nimport { Main } from '../main/Main';\nimport './App.css';\nconst App = () => {\n\n\n  return (\n    <BrowserRouter>\n      <div className=\"conteiner\">\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/card/:username/:reponame\" component={Card} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}